

@page "/Admin"

@layout  _LayoutAdmin

@inject IJSRuntime _JSRuntime
@inject ConfigurationData _ConfigurationData
@inject NavigationManager UriHelper
@inject MyBlazorDbContext _DbContext

<AuthorizeView>
    <Authorized>
        <div class="row " style="background-color:lightgoldenrodyellow;">
            <div class=" col w-25 text-center " style="max-width:300px;">
                <div class="accordion" id="accordionExample">
                    <div class="card">
                        <div class="card-header" id="headingOne">
                            <h2 class="mb-0">
                                <button class="btn btn-link btn-block text-left" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    添加产品信息展示
                                </button>
                            </h2>
                        </div>

                        <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample">
                            <div class="card-body">
                                <h1>数据添加</h1>
                                <form class="text-left">
                                    <div class="form-group ">
                                        <label for="inputCity">所属单位</label>
                                        <input type="text" class="form-control" @bind="Certificate.TD">
                                    </div>
                                    <div class="form-group">
                                        <label for="inputEmail4">产品名称</label>
                                        <input type="text" class="form-control" @bind="Certificate.Name">
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword4">产品编号</label>
                                        <input type="text" class="form-control" @bind="Certificate.Numbel">
                                    </div>
                                    <div class="form-group">
                                        <label for="inputAddress">试验日期</label>
                                        <input type="date" class="form-control" @bind="Certificate.TestDateTime">
                                    </div>
                                    <div class="form-group">
                                        <label for="inputAddress2">下次试验日期</label>
                                        <input type="date" class="form-control" @bind="Certificate.VNextTestDateTime">
                                    </div>
                                    <div class="form-group ">
                                        <label for="inputCity">试验人</label>
                                        <input type="text" class="form-control" @bind="Certificate.TestPersonnel">
                                    </div>
                                    <div class="form-group ">
                                        <label for="inputCity">校验单位</label>
                                        <input type="text" class="form-control" @bind="Certificate.ToTD">
                                    </div>
                                    <div class="form-group ">
                                        <label for="inputCity">生产厂家</label>
                                        <input type="text" class="form-control" @bind="Certificate.Manufacturer">
                                    </div>
                                    <div class="form-group text-right ">
                                        <button type="button" class="btn btn-primary" @onclick="AddCertificates">添加</button>


                                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
                                            批量添加
                                        </button>
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header" id="headingTwo">
                            <h2 class="mb-0">
                                <button class="btn btn-link btn-block text-left collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    试验报告模板管理
                                </button>
                            </h2>
                        </div>
                        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                            <div class="card-body">
                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header" id="headingThree">
                            <h2 class="mb-0">
                                <button class="btn btn-link btn-block text-left collapsed" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                    产品管理
                                </button>
                            </h2>
                        </div>
                        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample">
                            <div class="card-body">
                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <dvi class="container w-75 text-center" style="height:45rem;overflow-y:scroll">
                @*<Table TItem="BootstrapBlazor.Components."
                           IsPagination="true" PageItemsSource="@Certificates" PageItems="2" OnQuery="@OnQuery">
                        <HeaderTemplate>
                            <TableColumn TItem="DateTime" @bind-Field="@context.DateTime" />
                            <TableColumn TItem="string" @bind-Field="@context.Name" />
                            <TableColumn TItem="string" @bind-Field="@context.Address" />
                        </HeaderTemplate>
                        <RowTemplate>
                            <TableCell>@context.DateTime</TableCell>
                            <TableCell>@context.Name</TableCell>
                            <TableCell>@context.Address</TableCell>
                        </RowTemplate>
                    </Table>*@

                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">URl路由参数</th>
                            <th scope="col">产品名称</th>
                            <th scope="col">产品编号</th>
                            <th scope="col">操作</th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (Certificates != null)
                        {
                            @for (int k = 0; k < Certificates.Count; k++)
                            {
                                var itme = Certificates[k];
                                <tr>
                                    <th scope="row">@(k+1)</th>
                                    <td>@itme.Guid</td>
                                    <td>@itme.Name</td>
                                    <td>@itme.Numbel</td>
                                </tr>

                            }
                        }
                    </tbody>
                </table>


            </dvi>

            @*<div style="background-color:rgba(8,8,8,0.2);color:#ffffff;border:double;border-radius:10px;width:15rem;height:15rem;background-size:100%;background-repeat:no-repeat;background-image:url(/css/image/QRCODEURL.png)">
                    <p>@itme.Name</p>
                    <p>@itme.Numbel</p>
                    <p>@itme.Guid</p>
                    <button class="btn btn-primary" @onclick="@(d=>UpCertificates(@itme.Guid))">复制</button>
                    <button class="btn btn-primary" @onclick="@(d=>DelCertificates(@itme.Guid))">删除</button>
                </div>*@

        </div>

        @**弹出对话框*@
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">批量生产</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body ">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroup-sizing-default">生成数量</span>
                            </div>
                            <input type="text" class="form-control" @bind="BatchNumber" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                        </div>
                        <p>提示：批量生成规则是【产品编号按顺序递增】</p>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="AddCertificatesBatch">确认</button>
                    </div>
                </div>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        @*<a href="Identity/Account/Login">F:\Visual Studio 2015\威特电缆\MyBlazor\Areas\Identity\Pages\Account\Login</a>*@

        @{
            UriHelper.NavigateTo("Identity/Account/Login", true);
        }
    </NotAuthorized>
</AuthorizeView>


@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private Certificate Certificate { set; get; } = new Certificate();

    private List<Certificate> Certificates { set; get; }

    private string ImgSrc { set; get; }
    private int BatchNumber { set; get; } = 0;
    private string QrcodeUri { set; get; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (authenticationStateTask.Result.User.Identity.IsAuthenticated)
        {
            Certificates = await _DbContext.TableCertificates.AsNoTracking().ToListAsync();// _ConfigurationData.ListCertificates;
        }
    }

    private async void AddCertificates()
    {
        if (Certificate != null)
        {
            var select = _DbContext.TableCertificates.Where(f => f.Numbel == Certificate.Numbel).FirstOrDefault();
            if (select == null)
            {
                var certificate = new Certificate()
                {
                    Guid = Guid.NewGuid().ToString(),
                    TD = Certificate.TD,
                    ToTD = Certificate.ToTD,
                    Name = Certificate.Name,
                    Numbel = Certificate.Numbel,
                    TestDateTime = Certificate.TestDateTime,
                    TestPersonnel = Certificate.TestPersonnel,
                    VNextTestDateTime = Certificate.VNextTestDateTime
                };
                Certificates.Add(certificate);
                _DbContext.TableCertificates.Add(certificate);
                _DbContext.SaveChanges();
            }
            else
            {
                await _JSRuntime.InvokeVoidAsync("alert", "产品添加失败,已经存在相同编码产品");
            }

            _ConfigurationData.SaveJson(Certificates);
        }
    }

    private async void DelCertificates(string number)
    {
        var scer = Certificates.Find(r => r.Guid == number);
        if (scer != null)
        {
            _DbContext.Remove(scer);
            Certificates.Remove(scer);
            _DbContext.SaveChanges();
            await _JSRuntime.InvokeVoidAsync("alert", "产品删除成功");
        }
    }

    private void UpCertificates(string guid)
    {
        var scer = Certificates.Find(r => r.Guid == guid);
        if (scer != null)
        {
            Certificate = new Certificate()
            {
                TD = scer.TD,
                ToTD = scer.ToTD,
                Name = scer.Name,
                Numbel = scer.Numbel,
                TestDateTime = scer.TestDateTime,
                TestPersonnel = scer.TestPersonnel,
                VNextTestDateTime = scer.VNextTestDateTime
            };
        }
    }

    private async void AddCertificatesBatch()
    {
        if (BatchNumber > 0)
        {
            await Task.Run(() =>
            {

                for (int i = 0; i < BatchNumber; i++)
                {
                    var num = (int.Parse(Certificate.Numbel) + i).ToString();
                    var select = Certificates.FindLast(f => f.Numbel == num);
                    if (select == null)
                    {
                        Certificates.Add(new Certificate()
                        {
                            Guid = Guid.NewGuid().ToString(),
                            TD = Certificate.TD,
                            ToTD = Certificate.ToTD,
                            Name = Certificate.Name,
                            Numbel = num,
                            TestDateTime = Certificate.TestDateTime,
                            TestPersonnel = Certificate.TestPersonnel,
                            VNextTestDateTime = Certificate.VNextTestDateTime
                        }); ;
                    }
                }
                _ConfigurationData.SaveJson(Certificates);

            });
        }
    }

    private string GetImg(string guid)
    {
        QrcodeUri = UriHelper.BaseUri + @"/" + guid;

        return _ConfigurationData.GetQrImg(QrcodeUri);
    }
}
